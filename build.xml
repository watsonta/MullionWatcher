<project name="MullionWatcher" default="jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="revision" value="0.40" />
	
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="lib" location="lib"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>

	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" />
	
	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<mkdir dir="${lib}"/>

		<!-- Define Application Compilation Classpath -->
		<path id="classpath">
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
		</path>
		<pathconvert property="classpathProp" refid="classpath"/>
	    <echo message="classpath = ${classpathProp}"/>
	</target>

	<target name="resolve" depends="init">
        <ivy:resolve file="ivy.xml" conf="MullionWatcher" transitive="false"  type="jar"/>
        <ivy:retrieve />
    </target>
	
	<target name="compile" depends="resolve" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" debug="on" debuglevel="lines,vars,source">
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="jar" depends="compile" description="generate the distribution" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib"/>
		<!-- Put everything in ${build} into the MullionWatcher-${revision}.jar file -->
		<jar jarfile="${dist}/lib/MullionWatcher-${revision}.jar" basedir="${build}"/>
	</target>

	<target name="clean-cache">
		<ivy:cleancache />
    </target> 
		
	<target name="clean" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${lib}"/>
		<delete dir="${dist}"/>
	</target>

</project>